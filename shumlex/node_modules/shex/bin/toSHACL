#!/usr/bin/env node

var args = process.argv.slice(2);
if (args.length < 1) {
  console.error('usage: toSHACL <file>');
  return process.exit(1);
}

var failMarker = '<h1>Exception raised</h1>';
var beginMarker = '<pre class="prettyprint linenums lang-turtle">';
var endMarker = '</pre>';

var FormData = require('form-data');
var fs = require('fs');
 
var form = new FormData();
form.append("outputFormat", "TURTLE");
form.append("data", "#byInput_data");
form.append("schema", "#schema");
form.append("input-schema", "#byInput_schema");
form.append("withIRI", "#noIri");
form.append("schema_uri", "");
form.append("schema_file", "");
form.append("schema_textarea", fs.readFileSync(args[0], "utf8"));
form.append("schema_format", "SHEXC");
form.append("schema_version", "SHACL_0.1");

var body = "";

form.submit("http://rdfshape.herokuapp.com/converter/schema", function(err, res, body) {
  // res â€“ response object (http.IncomingMessage)  // 
  res.setEncoding('utf8');
  res.on('data', function (chunk) {
    body += chunk;
  });
  res.on('end', function () {
    if (body.indexOf(failMarker) === -1) {
      var start = body.indexOf(beginMarker)+beginMarker.length;
      var len = body.substr(start, 99999).indexOf(endMarker);
      console.log(body.substr(start, len));
    } else {
      console.warn(args[0] + " failed");
    }
  });
  debugger;
  res.resume();
});
